- name: Analysis of State of the Union Addresses dataset
  url: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Analysis%20of%20State%20of%20the%20Union%20Addresses%20dataset
  code: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Analysis%20of%20State%20of%20the%20Union%20Addresses%20dataset
  description: Analyze a collection of annual speeches delivered by the presidents of the United States, 
               from George Washington to Barack Obama. 
               List <strong>top 50 words by frequency</strong>, the top 50 <strong>bigrams by frequencies</strong>, 
               and the top 50 bigrams by their <strong>Mutual Information scores</strong>. 
               Compare the differences between deffrent periods.
  used:
    - thing: Python
    - thing: NLP
    - thing: NLTK
    - thing: Bigram
    - thing: Pointwise Mutual Information
    - thing: Tokenization 
    - thing: Lemmatization

- name: Using Regular Expressions to find email addresses in non-standard forms
  url: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Regular%20Expressions%20for%20Contact%20Finder
  code: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Regular%20Expressions%20for%20Contact%20Finder
  description: Use <strong>regular expressions</strong> to find email addresses or phone numbers in non-standard forms 
               (aka <strong>obfuscation</strong> which makes it hard for spammers to <strong>automatically search text</strong> for email addresses and phone numbers) 
               and return them in the standard forms. Observe what types of obfuscations work best to foil the spammers.
  used:
    - thing: Python
    - thing: NLP
    - thing: Regular Expressions
    
- name: Developing a context-free grammar to parse sentences
  url: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Context-Free%20Grammars
  code: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Context-Free%20Grammars
  description: Develop the <strong>context-free grammar</strong> that can <strong>parse some sentences</strong>. 
               List more different sentences that can be parsed by this grammar. 
               Write a <strong>probabilistic context-free grammar</strong> assuming the given sentences are a mini-mini training corpus 
  used:
    - thing: Python
    - thing: NLP
    - thing: NLTK
    - thing: Context-free grammar
    - thing: Probabilistic Context-free grammar
    - thing: Stanford parser


- name: Sentiment Analysis on Amazon Product Reviews
  url: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Sentiment%20Analysis%20on%20Amazon%20Product%20Reviews
  code: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Sentiment%20Analysis%20on%20Amazon%20Product%20Reviews
  description: Analyze the review contents from Amazon Product Data. 
               <strong>Tokenization</strong>, <strong>stop word filtering</strong> were used for the data preprocessing/cleaning. 
               For the classification task and the experiments, <strong>‚Äúbag-of-words‚Äù</strong>, <strong>Subjectivity Count features</strong> and <strong>Negation features</strong> were used to train and test a <strong>Naive Bayes classifier</strong>.
  used:
    - thing: Python
    - thing: NLP
    - thing: NLTK
    - thing: bag-of-words
    - thing: Naive Bayes
    - thing: Subjectivity Count features
    - thing: Negation features 

- name: Crowd DJ
  url: https://github.com/crowddj/crowddj-react
  code: https://github.com/crowddj/crowddj-react
  description:
    A web app that allows people who are at a party or social gathering with a DJ to request songs via their smartphones. The web app allows people to see the currently playing song, request songs, upvote songs, and rate songs so the DJ can see how the crowd is feeling and act accordingly. In other words, Crowd DJ is essentially a crowdsourced music queue. <br>
    <a class="small" href="http://projects.hackbeanpot.com/2017-projects.html">üèÜ Won Best UI/UX Design at Hackbeanpot 2017 üèÜ</a>
  used:
    - thing: React
    - thing: Sass
    - thing: Firebase
    - thing: Spotify API

- name: Sentiment Analysis on Trump Impeachment
  url: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Sentiment%20Analysis%20on%20Trump%20Impeachment
  code: https://github.com/harper-he/Python/tree/master/Natural%20Language%20Processing/Sentiment%20Analysis%20on%20Trump%20Impeachment
  description: We have performed sentiment analysis on Reddit comments on Trump impeachment. 
               We start by using a Python package named PRAW to <strong>scrape data</strong>, preprocessing and analyzing the <strong>word frequency</strong>. 
               There are four major features that we use to train the <strong>Naive Bayes classifier</strong>, <strong>document feature</strong>, SL feature, negation feature, and new SL feature. 
               In the experiment part, we used <strong>precision</strong>, <strong>recall</strong> and <strong>F-measure</strong> to evaluate the model performance. 
               It was my first experience of LaTeX Editor! üôå 
  used:
    - thing: Python
    - thing: NLP
    - thing: NLTK
    - thing: Data Scraping 
    - thing: Naive Bayes
    - thing: LaTeX

# - name: ScreenTime 2.0
#   url: https://play.google.com/store/apps/details?id=com.starry.management
#   description: App-blocking feature on <a class="underline-link" href="https://starry.com/station" target="_blank">Starry Station</a> that provides functionality for users to easily filter content, pause the internet, and even create custom rules for blocking apps like Facebook and Twitter right from their mobile phones. Learn more about ScreenTime 2.0 on <a class="underline-link" href="https://www.producthunt.com/tech/screentime-for-starry-station" target="_blank">Product Hunt</a> and the <a class="underline-link" href="https://blog.starry.com/whats-new-screentime-just-got-better-for-parents/" target="_blank">Starry Blog</a>.
#   used:
#   - thing: JavaScript
#   - thing: CSS
#   - thing: Handlebars
#   - thing: Backbone
#   - thing: Marionette
#   - thing: Cordova

- name: Personal Website V2
  url: https://bchiang7.github.io/v2
  code: https://github.com/bchiang7/v2
  description: Second iteration of my personal website. Designed and developed with a conscious effort to avoid using any superfluous frameworks like Bootstrap.
  used:
    - thing: Jekyll
    - thing: Handlebars
    - thing: SCSS
    - thing: JavaScript
    - thing: Github Pages

- name: React Resume
  url: https://bchiang7.github.io/react-profile/
  code: https://github.com/bchiang7/react-profile/
  description: An online version of my 2016 resume I made for fun. I was interested in learning React.js, so I found this <a class="underline-link" href="https://medium.com/learning-new-stuff/building-your-first-react-js-app-d53b0c98dc#.1439cdewq">simple tutorial</a> and it kind of spun into this weekend project. I probably didn't need to use React at all, but hey, at least I learned a few things!
  used:
    - thing: JavaScript
    - thing: React
    - thing: CSS

- name: CourseSource
  url: http://webdevspring2016-chiangbrittany.rhcloud.com/project/client/#/login
  code: https://github.com/bchiang7/WebDevSpring2016/tree/master/public/project
  description: A web application built on the MEAN (MongoDB, Express, Angular, Node) stack for my web development course at Northeastern. I created this web app with the intention of providing Northeastern Students a better experience browsing the courses offered at Northeastern.
  used:
    - thing: HTML
    - thing: CSS
    - thing: JavaScript
    - thing: Node.js
    - thing: Angular
    - thing: Express
    - thing: MongoDB

- name: NU Women in Tech
  url: http://nuwit.ccs.neu.edu/
  code: https://github.com/nuwit/website
  description: Complete overhaul and redesign of NU Women in Tech's club website using Jekyll, built while serving as web chair on the e-board.
  used:
    - thing: Jekyll
    - thing: HTML
    - thing: CSS
    - thing: JavaScript
    - thing: Bootstrap

- name: Fontipsums
  url: https://bchiang7.github.io/fontipsums
  code: https://github.com/bchiang7/fontipsums
  description: As someone who has an eye for typography, I wanted a way to visually see different font combinations together. I whipped up this simple website to display some of my favorite pairings combined with some fun lorem ipsum variations I found on the web.
  used:
    - thing: HTML
    - thing: SCSS

- name: Personal Website V1
  url: https://bchiang7.github.io/v1
  code: https://github.com/bchiang7/website_2015/
  description: My first portfolio website I designed and built in 2014. I learned quite a bit about HTML, CSS, and SEO. Since then, I think my web development and design skills have improved immensely.
  used:
    - thing: HTML
    - thing: CSS
    - thing: Bootstrap
    - thing: JavaScript
    - thing: jQuery

- name: One Card For All
  url: http://onecardforall.org
  description: MullenLowe's 2016 holiday site built around an algorithm that generates a holiday greeting to each and every person on the planet. As new names appear, visitors can watch them fall, like snowflakes, onto a stylized world map. Users can also find their own name and see it as part of the world collective. Check out this short <a class="underline-link" href="http://us.mullenlowe.com/work/one-card-for-all/" target="_blank">video</a> describing the project.
  used:
    - thing: HTML
    - thing: SCSS
    - thing: JavaScript
    - thing: jQuery

- name: JetBlue HumanKinda
  url: https://us.mullenlowe.com/work/humankinda/
  description: Tumblr site complementing JetBlue's HumanKinda campaign and documentary. The site houses the video documentary, many graphics created by Mullen for the campaign, and an interactive quiz to determine how "HumanKinda" you are. Learn more about this project <a class="underline-link" href="http://us.mullenlowe.com/work/humankinda/" target="_blank">here</a>.
  used:
    - thing: HTML
    - thing: CSS
    - thing: JavaScript
    - thing: jQuery
